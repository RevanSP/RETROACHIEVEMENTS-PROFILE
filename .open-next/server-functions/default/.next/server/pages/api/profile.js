"use strict";(()=>{var e={};e.id=698,e.ids=[698],e.modules={3480:(e,t,a)=>{e.exports=a(5600)},4066:(e,t,a)=>{a.r(t),a.d(t,{config:()=>A,default:()=>f,routeModule:()=>I});var r={};a.r(r),a.d(r,{default:()=>p});var n=a(3480),o=a(8667),s=a(6435);let i=null,l=0,m=new Map,c=new Map,u=async e=>{if(i&&Date.now()-l<432e5)return i;try{let t=await fetch(`https://retroachievements.org/API/API_GetConsoleIDs.php?y=${encodeURIComponent(e)}&a=1&g=1`,{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (compatible; RetroAchievements-Profile/1.0)"}});if(!t.ok)throw Error(`Failed to fetch system list: ${t.status}`);let a=await t.json(),r={};return Array.isArray(a)&&a.forEach(({ID:e,IconURL:t})=>{let a=t?.match(/\/([^\/]+)\.png$/);e&&a&&(r[e]=a[1])}),i=r,l=Date.now(),r}catch(e){return console.error("Error fetching system icon map:",e),{}}},d=(e,t,a)=>{e&&t.forEach(t=>{e?.[t]?.startsWith("/")&&(e[t]=a+e[t])})},g=e=>{let t=Date.now();m.has(e)||m.set(e,[]);let a=m.get(e).filter(e=>t-e<6e4);return!(a.length>=5)&&(a.push(t),m.set(e,a),!0)};async function p(e,t){if(console.log("=== Profile API Handler Called ==="),!g(e.headers["x-forwarded-for"]||e.socket.remoteAddress||"unknown"))return t.status(429).json({error:!0,message:"Too many requests. Please wait and try again."});if("GET"!==e.method)return t.status(405).json({error:"Method not allowed"});try{let{RA_USERNAME:a,RA_API_KEY:r}=process.env;if(!a||!r)return t.status(500).json({error:!0,message:"Missing RA_USERNAME or RA_API_KEY in environment variables",profile:null,game:null});let n=e.query.targetUser||a,o=c.get(n);if(o&&Date.now()-o.timestamp<3e5)return t.status(200).json(o.data);let s="https://retroachievements.org/API",i="https://media.retroachievements.org",l=async e=>{let t=await fetch(e,{method:"GET",headers:{"User-Agent":"Mozilla/5.0 (compatible; RetroAchievements-Profile/1.0)"}});if(!t.ok){let e=await t.text();throw Error(`RA API error: ${t.status} ${e}`)}return t.json()},m=`${s}/API_GetUserSummary.php?u=${encodeURIComponent(n)}&y=${encodeURIComponent(r)}&g=1&a=1`,g=await l(m);if(!g||"object"!=typeof g)return t.status(500).json({error:!0,message:"Invalid profile data received from RetroAchievements API",profile:null,game:null});if(g.UserPic?.startsWith("/")&&(g.UserPic=i+g.UserPic),g.MemberSince)try{let e=new Date(g.MemberSince),t=e=>e.toString().padStart(2,"0");isNaN(e.getTime())?g.FormattedMemberSince=g.MemberSince:g.FormattedMemberSince=`${e.getDate()} ${["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][e.getMonth()]} ${e.getFullYear()}, ${t(e.getHours())}:${t(e.getMinutes())}:${t(e.getSeconds())}`}catch{g.FormattedMemberSince=g.MemberSince}let p={...g,Status:g.Status||"Unknown",TotalRanked:g.TotalRanked||g.Rank||0,TotalSoftcorePoints:g.TotalSoftcorePoints||0,User:g.User||n,Motto:g.Motto||"",LastActivity:g.LastActivity||{ID:0,timestamp:null,lastupdate:null,activitytype:null,User:g.User||n,data:null,data2:null}},f=await u(r);if(p.LastGame&&d(p.LastGame,["ImageIcon","ImageTitle","ImageIngame","ImageBoxArt"],i),p.RecentlyPlayed&&Array.isArray(p.RecentlyPlayed)&&p.RecentlyPlayed.forEach(e=>d(e,["ImageIcon","ImageTitle","ImageIngame","ImageBoxArt"],i)),p.RecentAchievements)for(let e in p.RecentAchievements){let t=p.RecentAchievements[e];if(t&&"object"==typeof t)for(let e in t){let a=t[e];a?.BadgeName&&!a.BadgeName.startsWith("http")&&(a.BadgeName=`${i}/Badge/${a.BadgeName}.png`)}}let A=g.LastGameID;if(!A){let e={profile:p,game:null,message:"No LastGameID found"};return c.set(n,{timestamp:Date.now(),data:e}),t.status(200).json(e)}let I=`${s}/API_GetUserRecentlyPlayedGames.php?u=${encodeURIComponent(n)}&y=${encodeURIComponent(r)}&c=50`,h=await l(I);if(!Array.isArray(h)){let e={profile:p,game:null,message:"Recent games data is not in expected format"};return c.set(n,{timestamp:Date.now(),data:e}),t.status(200).json(e)}let P=h.find(e=>e.GameID==A);if(!P){let e={profile:p,game:null,message:"LastGameID not found in recent games"};return c.set(n,{timestamp:Date.now(),data:e}),t.status(200).json(e)}d(P,["GameIcon","ImageIcon","ImageTitle","ImageIngame","ImageBoxArt"],i),f[P.ConsoleID]&&(P.IconURL=`https://static.retroachievements.org/assets/images/system/${f[P.ConsoleID]}.png`);let y={profile:p,game:P};return c.set(n,{timestamp:Date.now(),data:y}),t.status(200).json(y)}catch(e){return console.error("=== PROFILE API ERROR ===",e),t.status(500).json({profile:null,game:null,error:!0,message:e.message||"An unknown error occurred",timestamp:new Date().toISOString()})}}let f=(0,s.M)(r,"default"),A=(0,s.M)(r,"config"),I=new n.PagesAPIRouteModule({definition:{kind:o.A.PAGES_API,page:"/api/profile",pathname:"/api/profile",bundlePath:"",filename:""},userland:r})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return a}});var a=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../webpack-api-runtime.js");t.C(e);var a=t(t.s=4066);module.exports=a})();