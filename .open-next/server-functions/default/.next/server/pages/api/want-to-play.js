"use strict";(()=>{var e={};e.id=804,e.ids=[804],e.modules={3480:(e,t,n)=>{e.exports=n(5600)},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,n){return n in t?t[n]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,n)):"function"==typeof t&&"default"===n?t:void 0}}})},6937:(e,t,n)=>{n.r(t),n.d(t,{config:()=>d,default:()=>m,routeModule:()=>A});var o={};n.r(o),n.d(o,{default:()=>f});var r=n(3480),a=n(8667),s=n(6435);let i=null,l=0,u=new Map,c=new Map;async function p(e){if(i&&Date.now()-l<432e5)return i;let t=await fetch(`https://retroachievements.org/API/API_GetConsoleIDs.php?y=${encodeURIComponent(e)}&a=1&g=1`);if(!t.ok)throw Error("Failed to fetch system list");let n=await t.json(),o={};return n.forEach(({ID:e,IconURL:t})=>{let n=t?.match(/\/([^\/]+)\.png$/);e&&n&&(o[e]=n[1])}),i=o,l=Date.now(),o}async function f(e,t){if(!function(e){let t=Date.now(),n=(c.get(e)||[]).filter(e=>t-e<6e4);return!(n.length>=5)&&(n.push(t),c.set(e,n),!0)}(e.headers["x-forwarded-for"]||e.socket.remoteAddress||"unknown"))return t.status(429).json({error:!0,message:"Too many requests. Please wait and try again."});let{RA_USERNAME:n,RA_API_KEY:o}=process.env;if(!n||!o)return t.status(500).json({error:"Missing RA_USERNAME or RA_API_KEY in environment"});let r=u.get(n);if(r&&Date.now()-r.timestamp<3e5)return t.status(200).json(r.data);let a=`https://retroachievements.org/API/API_GetUserWantToPlayList.php?u=${encodeURIComponent(n)}&y=${encodeURIComponent(o)}&c=500&o=0`;try{console.log(`Fetching Want To Play list for ${n}`);let e=await fetch(a);if(!e.ok)throw Error(`RA API error: ${e.status} ${e.statusText}`);let r=await e.json(),s=await p(o),i=Array.isArray(r.Results)?r.Results.map(e=>({...e,ImageIcon:e.ImageIcon?`https://media.retroachievements.org${e.ImageIcon}`:null,IconURL:s[e.ConsoleID]?`https://static.retroachievements.org/assets/images/system/${s[e.ConsoleID]}.png`:null})):[],l={count:r.Count||i.length,total:r.Total||i.length,wantToPlayList:i};u.set(n,{timestamp:Date.now(),data:l}),t.status(200).json(l)}catch(e){console.error("Error fetching Want To Play list:",e),t.status(500).json({error:"Failed to fetch Want To Play list",message:e.message,timestamp:new Date().toISOString()})}}let m=(0,s.M)(o,"default"),d=(0,s.M)(o,"config"),A=new r.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/want-to-play",pathname:"/api/want-to-play",bundlePath:"",filename:""},userland:o})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return n}});var n=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../webpack-api-runtime.js");t.C(e);var n=t(t.s=6937);module.exports=n})();