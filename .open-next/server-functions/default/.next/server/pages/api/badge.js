"use strict";(()=>{var e={};e.id=32,e.ids=[32],e.modules={3480:(e,t,r)=>{e.exports=r(5600)},4320:(e,t,r)=>{r.r(t),r.d(t,{config:()=>m,default:()=>A,routeModule:()=>h});var o={};r.r(o),r.d(o,{default:()=>u});var n=r(3480),a=r(8667),s=r(6435);let i=null,c=0,d=async e=>{let t=await fetch(e);if(!t.ok)throw Error(`Failed to fetch: ${e}`);return t.json()},l=async e=>(i&&Date.now()-c<432e5||(i=Object.fromEntries((await d(`https://retroachievements.org/API/API_GetConsoleIDs.php?y=${encodeURIComponent(e)}&a=1&g=1`)).map(({ID:e,IconURL:t})=>{let r=t?.match(/\/([^\/]+)\.png$/);return r?[String(e),r[1]]:null}).filter(Boolean)),c=Date.now()),i),p=async(e,t,r)=>{if(!r?.length)return{};let o={};for(let n=0;n<r.length;n+=500){let a=r.slice(n,n+500).join(",");try{let r=await d(`https://retroachievements.org/API/API_GetUserProgress.php?y=${encodeURIComponent(e)}&u=${encodeURIComponent(t)}&i=${encodeURIComponent(a)}`);Object.assign(o,r)}catch(e){console.warn(`Progress fetch failed for batch ${n/500+1}`)}}return o};async function u(e,t){let{RA_API_KEY:r,RA_USERNAME:o}=process.env,{username:n}=e.query,a=n||o;if(!r)return t.status(500).json({error:"Missing RA_API_KEY in env"});try{let[e,o,n,s]=await Promise.all([d(`https://retroachievements.org/API/API_GetUserAwards.php?y=${encodeURIComponent(r)}&u=${encodeURIComponent(a)}`),l(r),d(`https://retroachievements.org/API/API_GetUserCompletedGames.php?y=${encodeURIComponent(r)}&u=${encodeURIComponent(a)}`),d(`https://retroachievements.org/API/API_GetUserCompletionProgress.php?y=${encodeURIComponent(r)}&u=${encodeURIComponent(a)}&c=500&o=0`)]);if(!Array.isArray(e.VisibleUserAwards))return t.status(500).json({error:"Invalid awards data structure",data:e});let i=[...new Set(e.VisibleUserAwards.map(e=>e.AwardData).filter(Boolean))],c=await p(r,a,i),u=new Map(n.map(e=>[`${e.GameID}-${e.HardcoreMode}`,!0])),A=new Map((s?.Results||[]).map(e=>[e.GameID,e]));for(let t of e.VisibleUserAwards){let e=o[String(t.ConsoleID)];t.ImageIcon&&!t.ImageIcon.startsWith("http")&&(t.ImageIcon=`https://media.retroachievements.org${t.ImageIcon}`),t.IconURL=e?`https://static.retroachievements.org/assets/images/system/${e}.png`:null,t.HardcoreMode=u.has(`${t.AwardData}-1`)?"1":u.has(`${t.AwardData}-0`)?"0":null,t.CompletionProgress=A.get(t.AwardData)||null;let r=c[t.AwardData]||{};t.UserProgress={NumAchieved:r.NumAchieved??0,ScoreAchieved:r.ScoreAchieved??0,NumAchievedHardcore:r.NumAchievedHardcore??0,ScoreAchievedHardcore:r.ScoreAchievedHardcore??0}}t.status(200).json(e)}catch(e){console.error("Error in badge API:",e),t.status(500).json({error:"Failed to fetch or process badge data",message:e.message})}}let A=(0,s.M)(o,"default"),m=(0,s.M)(o,"config"),h=new n.PagesAPIRouteModule({definition:{kind:a.A.PAGES_API,page:"/api/badge",pathname:"/api/badge",bundlePath:"",filename:""},userland:o})},5600:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,r){return r in t?t[r]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,r)):"function"==typeof t&&"default"===r?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return r}});var r=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};var t=require("../../webpack-api-runtime.js");t.C(e);var r=t(t.s=4320);module.exports=r})();